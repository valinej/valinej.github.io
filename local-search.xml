<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>6、单耳失聪游戏解决方案</title>
    <link href="/2023/01/30/6%E3%80%81%E3%80%90%E5%B0%B1%E8%A6%81%E7%9E%8E%E6%90%9E%E3%80%91%E5%8D%95%E8%80%B3%E5%A4%B1%E8%81%AA%E6%B8%B8%E6%88%8F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2023/01/30/6%E3%80%81%E3%80%90%E5%B0%B1%E8%A6%81%E7%9E%8E%E6%90%9E%E3%80%91%E5%8D%95%E8%80%B3%E5%A4%B1%E8%81%AA%E6%B8%B8%E6%88%8F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>我的想法是这样：对于单耳失聪人群如果有fps游戏需求，依然需要某一边的声音提供的信息，以左耳失聪为例</p><p>我想到的方法很简单 </p><p>将左声道的声音处理后输出到右声道，在经过一段时间的熟悉后就可以分辨出声音是来自左边的</p><p>需要的是  </p><p>1、获得系统声音信号</p><p>2、音频信号处理使其可分辨，于此同时应该尽量简单减少延迟</p><p>3、左声道移动到右声道 </p><p>4、重新输出系统声音信号</p><h1>准备工作</h1><p>还是用python</p><p>库：</p><p>获得系统声音speech_recognition（目前不知道这个还能实现什么东西，重新输出估计也挺麻烦的，还会有重音，可能要调用系统api之类的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>5、【就要瞎搞】一、圆周率</title>
    <link href="/2023/01/05/5%E3%80%81%E3%80%90%E5%B0%B1%E8%A6%81%E7%9E%8E%E6%90%9E%E3%80%91%E5%9C%86%E5%91%A8%E7%8E%87/"/>
    <url>/2023/01/05/5%E3%80%81%E3%80%90%E5%B0%B1%E8%A6%81%E7%9E%8E%E6%90%9E%E3%80%91%E5%9C%86%E5%91%A8%E7%8E%87/</url>
    
    <content type="html"><![CDATA[<h1>就不查资料自己瞎搞！！！</h1><p>感觉也就高中水平了我这数学能力</p><p>想求这个，纯粹是当时闲的无聊来着，就想试着搞一搞</p><p>闲话想到再说，说正题</p><p>首先我们作出一些假设</p><p>人们在实践生活中发现了 圆的周长or面积与某一常数存在数学关系</p><p>so这样 我们就可以用面积or周长来求了</p><p>首先我想到的就是割圆法，只要割的够细就能求出足够多的位数</p><p>那么是用面积公式还是周长呢，先分开来分析一下</p><h2>面积</h2><p>我们将圆割成一个一个相同的等腰三角形，所有三角形的顶角相加为360</p><p>这样我们只需要考虑一个三角形即可</p><p>利用三角形面积公式可以快速求解</p><p>但是需要用到三角函数</p><p>三角函数又好像要用到泰勒公式</p><p>太哈人平方项太多了了下一个</p><h2>周长</h2><p>两个思路</p><p>一个是沿用上一个，把圆分成相同的等腰三角形，少一点点平方项，但是还是要用到三角函数</p><p>另一个是瞎切！！！</p><p>思路如下：</p><p>令半径R&#x3D;nT ，T为正整数</p><p>以T在x轴上步进，根据R对应求解出y轴坐标。然后求出两两坐标之间的距离剩下就显而易见了。做四分之一圆即可。</p><p>如果想象能力够强，可以发现在R-1到R点的距离会相对其他点较远，这里可以进行一个改的进</p><p>在y轴上同样坐相同的步骤，不过只需要做到R-1点的y轴位置即可（我的代码当然就不写这个了</p><hr><p>我最后当然是选择了周长了，相比面积会计算简单一些些（虽然也不用我手算但是还是倾向这个</p><code><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">math</span><br>#n个点数<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;lets try to caculate the &#x27;pi&#x27;&quot;</span>)<br>n=int(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;plz enter the number of simulation points you want: &quot;</span>))<br>delt = <span class="hljs-number">1</span><br><br>#<span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(n),<span class="hljs-built_in">type</span>(delt))<br>R = n*delt<br>quartcircle = <span class="hljs-number">0</span><br><br>def distance(x1,y1):<br>    x2 = x1+delt<br>    y2 = caculatey(x2,R)<br>    d = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">sqrt</span>((x2 - x1) ** <span class="hljs-number">2</span> + (y2 - y1) ** <span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> d<br><br>def caculatey(x,R):<br>    y = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">sqrt</span>(R**<span class="hljs-number">2</span>-x**<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> y<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(n):<br>    x=i*delt<br>    y=caculatey(x,R)<br>    quartcircle = quartcircle+distance(x,y)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;processing step %d&quot;</span> %i)<br>    <span class="hljs-built_in">pi</span> =(<span class="hljs-number">2</span>*quartcircle) /R<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">pi</span>)<br></code></pre></td></tr></table></figure><p>1w步的结果<br><code><strong>3.141592</strong>359593381</code></p><p>100w的结果</p><p>processing step 99998<br>3.132648372382828<br>processing step 99999<br><strong>3.1415926</strong>44292827</p><p>也就多了一位</p><p>看看更多的</p><p>1亿</p><p><strong>3.14159265358</strong>0481</p><p><strong>3.14159265358</strong>9793238462643383279502884197169399375<br>该圆周率《圆周率》来源于好工具，网址：<a href="https://pi.hao86.com/?from=crumbs">https://pi.hao86.com/?from=crumbs</a></p><p>看的出来改进的空间还很大，抓个年轻人给我按上面的思路修改一下得了</p><h1>查查资料看看有什么</h1><p>方法1：蒙地卡罗方法！&#x3D;&#x3D;&#x3D;&#x3D;》扔石头，帅的不谈</p><p>方法2：公式法，我是没想到居然还用公式来着，不过不知道超算一般用什么方法了</p><p>over</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4.5折腾qq机器人后续踩坑记录</title>
    <link href="/2023/01/05/4-5%E6%8A%98%E8%85%BEqq%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%90%8E%E7%BB%AD%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2023/01/05/4-5%E6%8A%98%E8%85%BEqq%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%90%8E%E7%BB%AD%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1>我把chatgpt+nonebot+gocqhttp的方案发b站啦</h1><p><a href="https://www.bilibili.com/video/BV1AM411Y7Lk/?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1AM411Y7Lk/?spm_id_from=333.999.0.0</a></p><p>然后成功帮助一些同学解决报错完成部署，甚至还直接上手免费给人搭了一个</p><p>但是</p><p>有点累是真的</p><p>也有很多同学来群里问我奇奇怪怪的问题</p><p>汇总一下喵</p><p>整个机器人需要同时运行bot.py 和gocqhttp.bat（这个说法不是很准确，但是便于萌新看懂</p><h2>看视频不仔细，不按视频里的步骤出现的奇怪错误。这个我不想再说啦，我唯一的建议是遇到问题按照以下步骤解决</h2><p>a.查看博客里有没有类似的问题</p><p>b.重新翻看视频</p><p>c.自己上网查找解决方案（csdn，github的issue）</p><p>d.群里呼叫万能的群友以及他们的bot</p><p>e.找群里的黑心小代</p><h2>1、pip时报错，最后有个433</h2>网络问题，挂代理<p>or换成清华源的镜像即可<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> nb-cli<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> nonebot-plugin-chatgpt</p><h2>2、第一次运行bot.py发现的报错</h2><h3>2.1最近更新后新鲜出炉的报错</h3><p>2023-01-18凌晨左右nonebot突然更新了，然后就有了新鲜出炉的bug。这部分由 <strong>忆云</strong> 同学发现并找到解决方案，年少有为咕哩咕哩（鼓励）</p><p>第一次运行bot.py时</p><p>a.出现一个fastapi的报错，解决方法请查看nonebot的issue <a href="https://github.com/nonebot/nonebot2/issues/1565">https://github.com/nonebot/nonebot2/issues/1565</a></p><p>b.似乎只是我们用到的插件会有这个问题，需要将</p><p><code></code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Please DO NOT modify this file unless you know what you are doing!</span><br><span class="hljs-comment"># As an alternative, you should use command `nb` or modify `pyproject.toml` to load plugins</span><br><span class="hljs-attribute">nonebot</span>.load_from_toml(<span class="hljs-string">&quot;pyproject.toml&quot;</span>)<br></code></pre></td></tr></table></figure><p>nonebot.load_from_toml(“pyproject.toml”)注释掉，即在它前面加上#</p><p><code>#nonebot.load_from_toml("pyproject.toml")</code></p><h3>2,2错误信息: AttributeError: 'NoneType' object has no attribute 'new_page'</h3><p>（我视频里演示没出现这个报错可能是因为我之前输入过，虽然我刻意conda弄了新的环境</p><p>terminal里输入playwright install回车等待下载结束后，重新run bot.py</p><h2>3、运行gocqhttp.bat</h2><p>登录后出现</p><p><strong>反向链接失败balabalabala</strong></p><p>这个问题不大，他会继续自己尝试，接着搞就行</p><h2>4、关于插件的配置问题</h2><p>我在视频里说了一下，关键是token的填写</p><p>其他的东西只能大家自己摸索喵</p><h2>5、全部成功后突然的报错</h2><p>一般是网络问题</p><p>建议等一会儿再试或者重启或者更换token</p><h2>6、在pip时说系统不支持运行脚本</h2><p>解决：以管理员身份运行powshell，输入 set-executionpolicy remotesigned，再输入a</p><p>over</p><h1 id="无法将“xxx”项识别为-cmdlet、函数、脚本文件或可运行程序的名称。"><a href="#无法将“xxx”项识别为-cmdlet、函数、脚本文件或可运行程序的名称。" class="headerlink" title="无法将“xxx”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。"></a>无法将“xxx”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。</h1><p>有两种说法，</p><p>1是再用一次上面那个（妹成功过）</p><p>2是搞环境变量（成功过）</p><p>以上再问就狠狠拷打不回答了喵——凡林婕</p><p>over</p><h1>终极方法</h1><p>虽然我一直和人说跟着视频里一步一步搞</p><p>但是有没有更快的方法呢？？？难道所有项目都是要一步步来？？</p><p>对于这个conda创建的环境来说</p><p>首先conda和gocqhttp还是正常搞</p><p>直接一手复制工程+复制anaconda&#x2F;env下环境到新电脑anaconda&#x2F;env下</p><p>然后interpret一改成新环境如新电脑anaconda&#x2F;env&#x2F;valinej&#x2F;python.exe</p><p>直接run</p><p>over</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>4、扣扣机器人</title>
    <link href="/2022/12/28/4%E3%80%81%E6%89%A3%E6%89%A3%E6%9C%BA%E5%99%A8%E4%BA%BA+chatgpt/"/>
    <url>/2022/12/28/4%E3%80%81%E6%89%A3%E6%89%A3%E6%9C%BA%E5%99%A8%E4%BA%BA+chatgpt/</url>
    
    <content type="html"><![CDATA[<h1>这是一个踩坑记录</h1><p>官方文档：<a href="https://v2.nonebot.dev/">NoneBot</a></p><p>b站一位大佬的教程：<a href="https://www.bilibili.com/video/BV1aZ4y1f7e2?p=5&vd_source=32fa29359a5600cf208ad02a74abc1f6">P4 创建你的第一个QQ机器人_哔哩哔哩_bilibili</a></p><p>我的电脑环境：</p><p>windows11</p><p>pycharm2021</p><p>python3.9</p><p>想试试这个的原因是chatgpt好好玩，而且可以把它放到群里变成猫娘（bushi），是我们学习生活的好帮手，想给宿舍的好兄弟们一起乐呵乐呵</p><h1>1、nonebot2</h1><h2>第一步 安装nonebot2</h2><p>​    <code>pip install nb-cli</code></p><h2>第二步  创建项目</h2><p><code>nb create</code></p><p>​然后就寄了</p><p>报错如下：</p><blockquote><p>An error occurred while requesting <a href="https://v2.nonebot.dev/adapters.json">https://v2.nonebot.dev/adapters.json</a>.</p><p>An error occurred while requesting <a href="https://fastly.jsdelivr.net/gh/nonebot/nonebot2/website/static/adapters.json">https://fastly.jsdelivr.net/gh/nonebot/nonebot2/website/static/adapters.json</a>.</p><p>RuntimeError: Failed to get adapter list.</p></blockquote><p>​上网查找一下，原来是有铸币开着学校的代理</p><p>随后顺着配置一下，这里就选一个adapter onebot v11以防止奇奇怪怪的报错</p><p><code>Successfully installed </code>完成安装</p><p>p.s：此处folder选择了src，另外后面选echo（不知道为啥）以及adapter那里选onebotv11(很重要，我之前错选了qq频道，然后就寄了后面会看到)，记得要用空格选中（</p><p>随后会自动生成</p><p>我的项目是创建在D：FILE\bot下，这里设置项目名称为kawaiipeach</p><p>目录如下：</p><p>D：FILE\bot\kawaiipeach</p><p>–src</p><p>—.env</p><p>—.env.dev</p><p>—.env.prod</p><p>— .gitignore</p><p>—bot.py</p><p>—docker-compose.yml</p><p>—Dockerfle</p><p>—pyprogect.toml</p><p>—Readme.md</p><h2>第三步 项目配置</h2><p>这里我们的bot.py，.env,使用默认</p><p>关于.env官网中有这样的介绍</p><blockquote><p>NoneBot 在启动时将会从系统环境变量或者 <code>.env</code> 文件中寻找变量 <code>ENVIRONMENT</code>（大小写不敏感），默认值为 <code>prod</code>。<br>这将引导 NoneBot 从系统环境变量或者 <code>.env.&#123;ENVIRONMENT&#125;</code> 文件中进一步加载具体配置。</p></blockquote><h3>配置.env</h3><p>这里environment&#x3D;dev（prod），表示从哪一个获取环境，跟着b站大佬的教程选了prod</p><h3>配置.env.dev</h3><p>设置  .env.dev中的端口号PORT&#x3D;11451（默认是8080，不修改的话可能会产生端口占用的情况),HOST默认为127.0.0.1，目的还是防止奇怪的报错，毕竟不是很熟悉</p><h3>配置.env.prod</h3><p>将.env.prod中 的host与port改为与.env.dev中一致</p><p>这里更关键的应该是prod这个文件里的东西</p><p>这里还可以设置其他东西，如超级账户，昵称之类的</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">HOST</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">PORT</span>=<span class="hljs-number">11451</span><br><span class="hljs-attr">DEBUG</span>=<span class="hljs-literal">true</span>  <span class="hljs-comment"># 开启 debug 模式 **请勿在生产环境开启**</span><br><span class="hljs-attr">SUPERUSERS</span>=[<span class="hljs-string">&quot;114514&quot;</span>]  <span class="hljs-comment"># 配置 NoneBot 超级用户</span><br><span class="hljs-attr">NICKNAME</span>=[<span class="hljs-string">&quot;bot&quot;</span>]  <span class="hljs-comment"># 配置机器人的昵称，据说没啥用</span><br><span class="hljs-attr">COMMAND_START</span>=[<span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-string">&quot;&quot;</span>]  <span class="hljs-comment"># 配置命令起始字符</span><br><span class="hljs-attr">COMMAND_SEP</span>=[<span class="hljs-string">&quot;.&quot;</span>]  <span class="hljs-comment"># 配置命令分割字符</span><br></code></pre></td></tr></table></figure><p>​</p><h1>2、go-cphttp</h1><h2>第一步 </h2><p><a href="https://github.com/Mrs4s/go-cqhttp/releases">Releases · Mrs4s&#x2F;go-cqhttp (github.com)</a></p><p>去到这里，下载 go-cqhttp_windows_amd64.exe 这一个文件，找不到就点击showall</p><p>这里我把它放到了bot下</p><p>打开windows自带的PowerShell</p><p><code>cd D:\FILE\bot</p><p><code>.\go-cqhttp_windows_amd64.exe</code></p><p>输入3选择“反向 websocket通信”，回车</p><p>随后会自动生成配置文件config.yml</p><h2>第二步 修改config文件进行信息配置</h2><p>打开生成好的config.yml</p><p>修改qq账号，不填密码也没有关系，一会儿扫码登录</p><p>修改<code>universal</code>为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ws:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">11451</span><span class="hljs-regexp">/onebot/</span>v11/ws<br>p.s这里好像比较重要的是host与post，夹在中间的onebot/v11这个还看到有人写cpHTTP的<br></code></pre></td></tr></table></figure><p>与HOST 和 POST保持一致</p><h2>第三步 重新运行</h2><p>这里我直接双击exe然后说，八行</p><p>but可以生成一个安全的balabalabala，一路下去，最终可以看到一个.bat，点击，成功打开，扫码登录</p><p>登录成功后还会生成一个token文件，据说后期如果登不上去了可以删掉这个再试试</p><p>cphttp本质是一个没有界面的QQ客户端，我们要做的就是bot——cphttp——qq服务器。。。。</p><h1>3、第一次运行nonebot2</h1><p>运行bot.py</p><hr><p>这一段是踩坑的部分</p><p>然后不出意料的又报错了，如下</p><blockquote><p>RuntimeError: Current driver ~fastapi doesn’t support forward connections!QQ Guild Adapter need a ForwardDriver to work.</p></blockquote><p>看来我们需要将驱动器改为<code>ForwardDriver</code>,但是具体要怎么搞捏</p><p>先尝试一下安装补丁看看，<a href="https://v2.nonebot.dev/store">NoneBot</a></p><p>安装“go-cphttp频道支持适配补丁”，未果</p><p>看官方文档，驱动器分为两种</p><ul><li><code>ForwardDriver</code>：即客户端类型驱动器，多用于使用 <code>HTTP </code>轮询，<code>WebSocket </code>连接服务器的情形。</li><li><code>ReverseDriver</code>：即服务端类型驱动器，多用于使用 <code>WebHook </code>情形。</li></ul><p>其中 <code>ReverseDriver</code> 可以配合 <code>ForwardDriver</code> 一起使用，即可以同时使用客户端功能和服务端功能。</p><p>默认的驱动器是<code>FastAPI</code>,这是一个<code>ReverseDriver</code>，而符合我们要求的官方文档里给出了<code>HTTPX</code>,<code>websockets</code>，<code>AIOHTTP</code>，老实说不是很懂，问问<code>chatgpt</code>，让我们修改配置文件，感觉很奇怪，因为我们在cphttp里明明选择的是“反向 websocket通信”</p><p>试试chatgpt的说法，不太对的感觉</p><p>看看报错这一行<code>driver.register_adapter(QQ_频道Adapter)</code></p><p>右键 go to declaration or usage，感觉看不出什么来QAQ</p><p>发动人脉试试。。。。。。暂时还没回我</p><p>最后发现是前面的adapt错选了 qq频道</p><hr><hr><p>成功运行</p><p>这时我们可以看到在pycharm的terminal里开始可以收到东西了（这里cphttp已经登上并运行着）。</p><p>让其他人给这个账号发一个&#x2F;echo kawaii peach，可以在qq中看到下述场景</p><p>​                                                                              &#x2F;echo kawaii peach :工具人</p><p>（cphttp登录账号的id）:kawaii peach</p><h1>4、安装插件</h1><p>刚刚配置好nonebot2，就能使用了吗，显然是不行的，上面的&#x2F;echo命令应该只是一个系统自带的指令</p><p>我们配置好的东西只是一个框架，真正要实现某种功能还需要安装需要的插件（或者自己写</p><p>现在是23：51了，又想给hxd们炫耀一下，又困了 怎么办，整“个人生重开”给xdm玩一玩</p><p>去到官网插件商城，下载安装（复制后到terminal里粘贴回车运行）对应插件，可以在右上角点击GitHub的猫猫头进去看详细内容</p><p>注意，插件的名字在作者名字上方</p><p>此处为<code>nonebot-plugin-remake</code></p><p>来到bot.py</p><p>在这一行下方</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">nonebot.load<span class="hljs-constructor">_builtin_plugins(<span class="hljs-string">&quot;echo&quot;</span>)</span><br></code></pre></td></tr></table></figure><p>加入</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">nonebot.load<span class="hljs-constructor">_plugin(<span class="hljs-string">&quot;nonebot_plugin_remake&quot;</span>)</span><br></code></pre></td></tr></table></figure><p>然后又寄了XD，（当然这里贴出来的是没问题的，寄了只是我当时寄了）</p><h3>第一次报错</h3> 在安装插件的时候，报错说没有config，查了查资料，有人说是没有nbcil<p>然后我在qq群里试了一下发现用不了</p><p>于是又重新配置了一遍，装的时候才发现原理我就是用的nbcil安装的nonebot2。</p><p>一看环境，这插件不已经早在里面了吗nnd</p><p>于是我pip uninstall重新装</p><p>这次安装我直接用的pip，效果好的很，但实际测试发现还是不行</p><h3>第二个报错（其实也没报自己发现的）</h3><p>在上面的测试之后，我有预感是由于我的调用不对，于是我重新翻看视频，发现我错写成了这个</p><p>nonebot.load_plugins(“nonebot-plugin-remake”)</p><p>多了个s，其实也不能全怪我，因为自动补全出来就是这个 QAQ</p><h3>第三个报错</h3><p>再run，又报错no module named “nonebot-plugin-remake”</p><p>再定睛一看，这括号里的好像和我pip的有点点不同，把下划线换了，宿舍群测试成功，就是没人理我了QAQ</p><p>这也不能全怪我，因为我还是直接从插件商店copy过来的。</p><p>至此，机器人的安装全部完成，突然发现chatgpt的插件已经有人写了。</p><p>也没人夸夸</p><p>那接下来就读一读插件的代码学习来增加一些知识罢over</p><p>2022&#x2F;12&#x2F;31 00：41</p><h1>5、安装ChatGPT插件</h1><p>最早开始弄qq机器人就是为了折腾这个ChatGPT，自然是要安装这个插件的</p><p>chatgpt账号注册就不写了</p><p>安装这个一定要看readme</p><p>前面的步骤与之前相同，说说我成功安装后遇到的坑</p><p>1、找不到config</p><p>官方文档里说到要在配置文件里填入token</p><p>最开始我没太搞明白是哪个配置文件，后面 乱点才发现这个插件的文件夹里还有个config文件。 </p><p>没能及时发现这个问题的原因我归结于是我没有单独创建虚拟环境，用的之前的环境，这个习惯不是很好下次改正，</p><p>我的具体位置是在<code>（省略）\py3.9\Lib\site-packages\nonebot_plugin_chatgpt</code>省略的部分可能会有差异，后面应该都是一样的，找不到的话建议用 everything这个软件搜索一下文件夹</p><p>2、运行时会遇到 报错（nonetype。。。。new page。这样的）</p><p>仔细看报错最上面会提示让你在shell 里运行playWright install</p><p>我一开始在cd到文件夹里运行了这个，找不到这个命令。后面我错误的认为是要我装这个playwright库。我检查了环境发现早就已经装上了</p><p>在搜索了一圈之后我了解到，chatgpt因为没有开放 api，所以采用的是模拟网页的方式，playWright install则将为你安装firefox浏览器用于这个目的</p><p>于是我又在pycharm的terminal里运行playWright install</p><p>成功</p><p>我分析在cd到项目文件夹运行命令找不到 的原因，应该还是没有把环境单独拎出来放到项目文件夹里，下次改正</p><p>3、随后遇到的问题基本就是网络问题了。噶了就重启 一下吧。</p><p>在我测试的时候发现要在复制token之后把浏览器关了，不然会一直报错，其他就没什么了，还是很简单的。</p><p>昨天其实就玩上了，之后的想法是自己训练一个这样的模型试试，再用自己的声音来训练个语音，然后赛博飞升（bushi</p><p>2023.1.1 11.25</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>3、记录一些很好用的东西</title>
    <link href="/2022/12/22/3%E3%80%81%E8%AE%B0%E4%B8%80%E4%BA%9B%E5%BE%88%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B0%8F%E4%B8%9C%E8%A5%BF/"/>
    <url>/2022/12/22/3%E3%80%81%E8%AE%B0%E4%B8%80%E4%BA%9B%E5%BE%88%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B0%8F%E4%B8%9C%E8%A5%BF/</url>
    
    <content type="html"><![CDATA[<h1>记录一些很好用的东西</h1><p>由于版权问题，很多视频都需要付费下载或者不能下载，但网上的视频有些时候总需要下载下来用于学习XD</p><h1>1.you-get </h1><p>这个是一个用python写的项目</p><p>下载过程极其简单，先cd到python下（我电脑cmd里直接输python找不到</p><p>you-get url</p><p>最后会下到python路径下</p><p>安利一个软件 everything，找文件速度比windows文件夹右上角的快多了</p><p>有些时候会因为压缩格式的问题打不开，别慌，这里就不用格式工厂了，用ffmpeg</p><p>cmd里输入 ffmpeg -i 需要修改的文件名 修改后的文件名</p><h1>2、ffmpeg</h1><p>这玩意相当nb，好像是市面上许多视频播放软件的基础</p><p>记录一些个我常用的指令</p><p>记得要先cd到文件路径下，不过cmd cd好像有些小坑</p><p>我更喜欢提前设置之后在文件夹用右键打开cmd</p><p>改格式  <code>ffmpeg -i input output</code></p><p>截取某一段视频<code>ffmpeg -i ftj.mp4 -ss 00:18:47 -to 00:18:55 -c:v copy -c:a copy output.mp4  </code></p><p>拼接<code>ffmpeg -i "concat:1.mp4|2.mp4|3.mp4|4.mp4|5.mp4" -c copy output.mp4 </code>，这个很容易寄，反正我是没成功</p><h1>3、xlx</h1><p><a href="https://zhuanlan.zhihu.com/p/259583430">https://zhuanlan.zhihu.com/p/259583430</a></p><p><a href="https://xlrd.readthedocs.io/en/latest/">xlrd — xlrd 2.0.1 documentation</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>置顶test</title>
    <link href="/2022/12/21/%E7%BD%AE%E9%A1%B6test/"/>
    <url>/2022/12/21/%E7%BD%AE%E9%A1%B6test/</url>
    
    <content type="html"><![CDATA[<p>sticky: 100表示置顶，0-100越大越靠上</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2、动态规划与viterbi</title>
    <link href="/2022/12/03/2%E3%80%81%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B8%8Eviterbi/"/>
    <url>/2022/12/03/2%E3%80%81%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B8%8Eviterbi/</url>
    
    <content type="html"><![CDATA[<h1>题外话</h1>接触到这个算法是在随机信号课的大作业上，据说这个算法在通信中有较多的应用，值得一学，本身也很简单。  <p>分析的时候用到了图论，有一说一这个东西在刚学的时候感觉是1t4，  </p><p>现在图论开始有点感觉了</p><p>btw为啥这b东西后面git不上去了QAQ</p><h1>正文开始</h1>我们举一个简单的例子在一个4x4的棋盘上，棋子要从左上角（0，0）移动到左下角（3，3）缺个图 4x4棋盘<h2>（1）后效性的与无后效</h2><p>思考以下两个情况：<br>1、棋子可向上下左右方向移动<br>2、棋子可向上下左右方向移动，但不能移动到曾经经过的位置。<br>在情况1中，棋子移动以后，上一步决策的不会对下一步产生影响（不考虑边界的情况下），即无后效性；情况2中，棋子下一步不能选择之前经过的位置，即过去对未来产生了影响，故为后效性<br>马尔可夫不仅为我们提供了一个高效的数学工具，其中无后效性的数学思想也同为重要。</p><h2>（2）动态规划</h2>我们将（2）中的例子稍作变换：有一个M*N的棋盘，棋子要从左上角（0，0）移动到右下角（M,N）。规定棋子只能向左或相下移动，求一共有多少条路径。我们将棋盘定义为一个M*N的二维数组Q，数组中的值表示到达该点的路径之和，这一点我个人认为是最为关键。<p>另一个关键在于找到数组之间的关系。<br>首先可以确定一些简单的初始值来使我们的分析更为直观。本题中，第一行与第一列(Q[0,]和Q[,0])显然为1。<br>由于棋子只能向下或向右移动，故Q[I,J]&#x3D;Q[I-1,J]+Q[I,J-1]。<br>到此我们的算法就可以很简单的实现了（两个for就可以啦）。</p><p>这个问题还可以进一步推广，如加入一些障碍物，求解最短路径，分析方法与此题类似。<br>一般来说，能够采用动态规划方法求解的问题，必须满足最优化原理和无后效性原则：<br>1、动态规划的最优化原理，即子问题的局部最优将导致整个问题的全局最优。在最短路径问题中，A到E的最优路径上的任一点到终点E的路径，也必然是该点到终点E的条最优路径，即整体优化可以分解为若干个局部优化。<br>2、动态规划的无后效性原则，当前的状态是此前历史的一个完整的总结，此前的历史只能通过当前的状态去影响过程未来的演变。<br>由此可见，对于不能划分阶段的问题或不符合最优化原理的，不能用动态规划的方法来求解。<br>为什么动态规划比搜索要快？就是因为动态规划的最优性原理和无后效性。在动态规划推导出一个阶段的结果时，会将其保留，再次遇到这个结果直接调用。</p><h2>(3)从图论到viterbi</h2><p>西八，这里缺了好多图<br>这里编程的一个关键在于，我们分析过程中可以发现<br>在连续三层求出最短路径后，都有唯一确定对应的值<br>欸，从这个角度是不是又可以看作是两层了，再次重复即可，那么在编程时，关键就是<br>抓住这个“看作两层”的思想来找到数学关系，ez</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1、blog相关操作</title>
    <link href="/2022/12/03/1%E3%80%81%E5%85%B3%E4%BA%8Eblog%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%88%E9%98%B2%E6%AD%A2%E5%BF%98%E8%AE%B0/"/>
    <url>/2022/12/03/1%E3%80%81%E5%85%B3%E4%BA%8Eblog%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%88%E9%98%B2%E6%AD%A2%E5%BF%98%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>还是写中文舒服，不过英语也不能落下<br>假期多写写英语，现在挺忙没空学英语了QAQ</p><h1>记录一些和blog相关的操作</h1><h2>0.到blog目录</h2><p>右键<br>git bush here</p><h2>1、更换主题</h2><p>搭建blog用的hexo</p><p>主题是fluid <a href="https://fluid-dev.github.io/hexo-fluid-docs/">Hexo Fluid 用户手册 (fluid-dev.github.io)</a></p><p>把要的主题文件夹解压放到theme下，改成方便的文件名<br>在_config.yml拉到最下面找到 theme 属性，修改成对应的文件名<br>（language改为zh-CN好像就支持中文了）（有些项目和这个不一样XD<br>当前主题<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><h2>2、通常冒号后面要有个空格不然会报错</h2><p>例如：YAMLException: bad indentation of a mapping entry (1:21)</p><h2>3、重新部署</h2><p>hexo clean<br>hexo g（enerate）<br>hexo d<br>部署不上去多试几次就行（大概</p><p>btw本地查看 hexo s(erves)</p><h2>4、新发布文章</h2><p>hexo new newpapername  </p><p>然后在source&#x2F;_post中打开markdown文件，就可以开始编辑了。  </p><p>写完后保存，再最后再次重新部署<br>（有时间得学学markdown官方教程(<a href="https://markdown.com.cn/basic-syntax/line-breaks.html">https://markdown.com.cn/basic-syntax/line-breaks.html</a>)</p><h2>5、删除文章</h2>现在source删掉对应文章#然后删掉deployed文件夹（似乎现在并不需要最后重新部署<p>​如果删除时报错，可以试试下面的办法</p><p>​创建.txt文件</p><pre><code class="hljs">输入DEL /F /A /Q \\?\%1RD /S /Q \\?\%1</code></pre><p>​随后改为.bat文件</p><p>把文件拖过来就可以删除了，ez，over</p><h2>6、修改主题内容</h2><p>这里使用的主题是fluid</p><h3>(1)修改图片</h3><p>详细可以修改的内容见theme1下的config里</p><p>这里需要注意的是，图片应该放到theme1&#x2F;source&#x2F;img下，而不是你的blog文件夹下public&#x2F;image</p><p>这里建议把要改的图片命名为别的，别 偷懒改成default，叫这个的太捏嘛多了</p><p>icon图片似乎不能过大，容易加载不出来，</p><p>放一个图片压缩网站(<a href="https://docsmall.com/image-compress">https://docsmall.com/image-compress</a>)</p><p>icon制作网站(<a href="https://www.logosc.cn/logo/favicon)%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%94%9F%E6%88%90%E7%9A%84%E5%A4%9F%E5%B0%8F%E8%BF%98%E6%98%AF%E5%AF%84%E4%BA%86%EF%BC%8C%E7%BB%BC%E4%B8%8A%E6%89%80%E8%BF%B0%E5%B0%B1%E6%98%AF%E4%B8%A4%E4%B8%AA%E9%83%BD%E5%AF%84%E4%BA%86">https://www.logosc.cn/logo/favicon)，这个生成的够小还是寄了，综上所述就是两个都寄了</a></p><p>btw在文章前添加banner一直显示不出来，不过似乎不能一篇文章一个图片，那就摆了罢（悲</p><p>立个flag  自己写一个压缩算法</p><p>再立个flag 自己写一个 生成马赛克图片的算法</p><h3>(2)添加评论区</h3><p>a.这里我用的是utterances</p><p>首先要做的是在github上创建一个用于存放评论的repo 例如comments</p><p>随后点击<a href="https://github.com/apps/utterances%E5%8E%BB%E5%AE%89%E8%A3%85%EF%BC%8C%E9%A1%BA%E7%9D%80%E6%9D%A5%E5%B0%B1%E8%A1%8C%E8%AE%B0%E5%BE%97%E9%80%89comments">https://github.com/apps/utterances去安装，顺着来就行记得选comments</a></p><p>然后会弹出来它的configure页面，没有弹出来也没啥问题，再次点击链接找到configure按键即可</p><p>顺着下去，按找要求的格式再次输入repo</p><p>最后会生成一段代码，不要关闭页面</p><p>b.打开theme的config</p><p>找到对应位置，看它需要什么，对应复制修改即可，多的不用管</p><p>c.坏了</p><p>我发现好像自带了一个</p><p>在1000来行的地方</p><p>XD</p><h3>(3)开启阅读统计</h3><p>这个是最简单的，找到config里对应的改成true就行</p><p>它好像预装了busuanzi</p><p>开香槟咯</p><h3>(4)开启网站追踪统计</h3><p>这个东西在博客上显示不出来，但是可以帮你统计相关的数据</p><p>config里有放了很多的链接</p><p>我这里用的百度提供的</p><p>老简单了</p><p>登录百度账号后，在网站填写博客url，balabala最后又会有一段代码了，看config里的提示，把后面的码放到下方</p><p>baidu：放这里</p><p>over</p><title>6、修改主题的一些坑<title>    （1）更换主题的一些图片    更换的图片要放在theme1/source/img里，我第一次弄没找教程自己试着来的，没找到img气急败坏了直接搜文件夹下的.png然后就进了pulbic/img然后怎么提交都不出来]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>0、My first blog(real</title>
    <link href="/2022/11/19/0%E3%80%81My-first-blog%20/"/>
    <url>/2022/11/19/0%E3%80%81My-first-blog%20/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs">Its my first time to write my blog. I would like to present some experience of the problems which I solved in the blog-building process.1. The tutorial I followed is this one  https://blog.csdn.net/szjccc/article/details/121830084 which use gitee-page. gitee is a little bit complex so I finally chose github-pages.There is another reference https://blog.csdn.net/yaorongke/article/details/1190891902.The first problem you should focus is the version of nodejs. As usual the older version may have less bugs.But it may cause something you can`t install because it needs the higher version.</code></pre><p>​<br>​    3.The github repository name you need to set like this username.github.io , set as public and you would better to add readme as init.<br>​     I don not know the reason, but I failed in the first time when i try accessing <a href="https://valinej.github.io/">https://valinej.github.io/</a>. So saaaaaaaaaaaaad.XD.</p><p>​<br>​    4. When you open the “ __config.yml “, you will find that the deployment section is missing something.<br>​    These missing things need to be completed by yourself<br>​    </p><pre><code class="hljs">5. WHAT HELL? DAME HOW TO UPDATE MY PREVIOUS BLOGS ????</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
